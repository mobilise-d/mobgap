name: Build Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --all-extras
      - name: Install library
        run: poetry install --no-interaction --all-extras
      - name: Cache Entire Build Directory
        uses: actions/cache@v3
        if: github.event_name == 'pull_request'
        with:
          path: |
            docs/_build/
            docs/modules/generated/
            docs/auto_examples/
          key: pr-${{ github.event.pull_request.number }}-${{ runner.os }}-docs
      - name: Build Documentation
        run: |
          poetry run poe docs

#      - name: Link Checker
#        run: |
#          poetry run poe docs_linkcheck
      - name: Upload Documentation as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/_build/html/