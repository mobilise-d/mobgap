[tool.poetry]
name = "gaitlink"
version = "0.1.0"
description = "A Python implementation of the Mobilise-D algorithm pipeline for gait analysis using IMU worn at the lower back."
authors = ["Arne KÃ¼derle <arne.kuederle@fau.de>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
tpcp = "^0.23.0"
pandas = "^2.1.0"
scipy = "^1.11.2"
numpy = "^1.25.2"
scikit-learn = "^1.3.0"
# TODO: Remove this dependency at some point
gaitmap = "^2.3.0"


[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
poethepoet = "^0.22.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
ruff = "^0.0.286"
sphinx = "^7.2.5"
sphinx-gallery = "^0.14.0"
memory-profiler = "^0.61.0"
matplotlib = "^3.7.2"
toml = "^0.10.2"
pydata-sphinx-theme = "^0.13.3"
myst-parser = "^2.0.0"
ipykernel = "^6.25.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311"]
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | docs
    | build
    | dist
    | \.virtual_documents
  )/
)
'''

[tool.poe.tasks]
_format_black = "black ."
_format_ruff = "ruff . --fix-only --exit-zero"
format = { sequence = ["_format_black", "_format_ruff", "_format_black"], help = "Format all files with Black and Ruff." }
lint = { cmd = "ruff gaitlink --fix", help = "Lint all files with ruff." }
_lint_ci = "ruff gaitlink --format=github"
_check_black = "black . --check"
ci_check = { sequence = ["_check_black", "_lint_ci"], help = "Check all potential format and linting issues." }
test = { cmd = "pytest --cov=gaitlink --cov-report=term-missing --cov-report=xml", help = "Run Pytest with coverage." }
docs = { "script" = "_tasks:task_docs()",  help = "Build the html docs using Sphinx." }
docs_preview = { cmd = "python -m http.server --directory docs/_build/html", help = "Preview the built html docs." }
version = { script = "_tasks:task_update_version()", help="Pump the version number in all relevant files."}
conf_jupyter = { cmd = "python -m ipykernel install --user --name gaitlink", help = "Add a new jupyter kernel for the project." }
remove_jupyter = { cmd = "jupyter kernelspec uninstall gaitlink", help = "Remove the project specific jupyter kernel."}

